# Generated by Django 5.0 on 2023-12-16 19:40

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('districts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Crops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('sugarcane', 'Sugarcane'), ('wheat', 'Wheat'), ('rice', 'Rice')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CropsTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(choices=[('plant', 'Plant'), ('veg_growth', 'Vegetative Growth'), ('gran_growth', 'Grand Growth and Tillering'), ('ripen', 'Maturation and Ripening'), ('harvest', 'Harvesting')], max_length=30)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farms.crops')),
            ],
        ),
        migrations.CreateModel(
            name='CropConditionsTimed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ndvi_min', models.FloatField(validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('ndvi_max', models.FloatField(validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('lst_min', models.FloatField(validators=[django.core.validators.MinValueValidator(150), django.core.validators.MaxValueValidator(1310)])),
                ('lst_max', models.FloatField(validators=[django.core.validators.MinValueValidator(150), django.core.validators.MaxValueValidator(1310)])),
                ('leafcover_min', models.FloatField()),
                ('leafcover_max', models.FloatField()),
                ('croptimestage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='farms.cropstimeline')),
            ],
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='districts.address')),
                ('crops', models.ManyToManyField(to='farms.crops')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IdealCropConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soil_type', models.CharField(choices=[('clay_soil', 'Clay Soil'), ('sand_soil', 'Sand Soil'), ('silty_soil', 'Silty Soil'), ('peaty_soil', 'Peaty Soil'), ('chalky_soil', 'Chalky Soil'), ('loamy_soil', 'Loamy Soil')], max_length=20)),
                ('soil_ph_min', models.FloatField()),
                ('soil_ph_max', models.FloatField()),
                ('nitrogen_min', models.DecimalField(decimal_places=2, max_digits=5)),
                ('nitrogen_max', models.DecimalField(decimal_places=2, max_digits=5)),
                ('phosphorus_min', models.DecimalField(decimal_places=2, max_digits=5)),
                ('phosphorus_max', models.DecimalField(decimal_places=2, max_digits=5)),
                ('potassium_min', models.DecimalField(decimal_places=2, max_digits=5)),
                ('potassium_max', models.DecimalField(decimal_places=2, max_digits=5)),
                ('crop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='farms.crops')),
            ],
        ),
        migrations.CreateModel(
            name='LandConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soil_type', models.CharField(choices=[('clay_soil', 'Clay Soil'), ('sand_soil', 'Sand Soil'), ('silty_soil', 'Silty Soil'), ('peaty_soil', 'Peaty Soil'), ('chalky_soil', 'Chalky Soil'), ('loamy_soil', 'Loamy Soil')], max_length=20)),
                ('soil_ph', models.FloatField()),
                ('nitrogen', models.DecimalField(decimal_places=2, max_digits=5)),
                ('phosphorus', models.DecimalField(decimal_places=2, max_digits=5)),
                ('potassium', models.DecimalField(decimal_places=2, max_digits=5)),
                ('ndvi', models.FloatField(validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('lst', models.FloatField(validators=[django.core.validators.MinValueValidator(150), django.core.validators.MaxValueValidator(1310)])),
                ('leafcover', models.FloatField()),
                ('farm', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='farms.farm')),
            ],
        ),
    ]
