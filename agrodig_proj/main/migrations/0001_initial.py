# Generated by Django 2.1.15 on 2023-12-10 17:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('address_id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'Address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Crops',
            fields=[
                ('crop_id', models.AutoField(primary_key=True, serialize=False)),
                ('crop_name', models.CharField(blank=True, max_length=30, null=True)),
                ('crop_season', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'Crops',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Discussions',
            fields=[
                ('discussion_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'db_table': 'Discussions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Districts',
            fields=[
                ('district_id', models.AutoField(primary_key=True, serialize=False)),
                ('district_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'Districts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FarmCrops',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planting_date', models.DateField(blank=True, null=True)),
                ('harvest_prediction', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'farm_crops',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Farms',
            fields=[
                ('farm_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Farms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FertilizerCompany',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(blank=True, max_length=25, null=True)),
                ('contact_no', models.CharField(blank=True, max_length=25, null=True)),
                ('email', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'Fertilizer_Company',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fertilizers',
            fields=[
                ('fertilizer_id', models.AutoField(primary_key=True, serialize=False)),
                ('fertilizer_name', models.CharField(blank=True, max_length=30, null=True)),
                ('nitrogencontent', models.DecimalField(blank=True, db_column='NitrogenContent', decimal_places=2, max_digits=5, null=True)),
                ('phosphoruscontent', models.DecimalField(blank=True, db_column='PhosphorusContent', decimal_places=2, max_digits=5, null=True)),
                ('potassiumcontent', models.DecimalField(blank=True, db_column='PotassiumContent', decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'Fertilizers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Markets',
            fields=[
                ('market_id', models.AutoField(primary_key=True, serialize=False)),
                ('market_name', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'Markets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('topic_id', models.AutoField(primary_key=True, serialize=False)),
                ('topic_name', models.CharField(blank=True, max_length=40, null=True)),
                ('total_messages', models.IntegerField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Topic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('password', models.CharField(blank=True, max_length=25, null=True)),
                ('name', models.CharField(blank=True, max_length=35, null=True)),
                ('address_id', models.IntegerField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=35, null=True)),
                ('email', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Areacover',
            fields=[
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Farms')),
                ('long_start', models.FloatField(blank=True, null=True)),
                ('long_end', models.FloatField(blank=True, null=True)),
                ('lat_start', models.FloatField(blank=True, null=True)),
                ('lat_end', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'areacover',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CropConditions',
            fields=[
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Crops')),
                ('temp_low', models.FloatField(blank=True, null=True)),
                ('temp_high', models.FloatField(blank=True, null=True)),
                ('plant_start', models.DateField(blank=True, null=True)),
                ('plant_end', models.DateField(blank=True, null=True)),
                ('harvest_start', models.DateField(blank=True, null=True)),
                ('harvest_end', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Crop_Conditions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CropPrices',
            fields=[
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Crops')),
                ('time_start', models.DateField(blank=True, null=True)),
                ('time_end', models.DateField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'Crop_Prices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Farmers',
            fields=[
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Users')),
            ],
            options={
                'db_table': 'farmers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FarmsAuthorized',
            fields=[
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Users')),
            ],
            options={
                'db_table': 'farms_authorized',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FertilizersRecommendations',
            fields=[
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Crops')),
            ],
            options={
                'db_table': 'Fertilizers_Recommendations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FertilizersVendor',
            fields=[
                ('fertilizer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Fertilizers')),
            ],
            options={
                'db_table': 'Fertilizers_Vendor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Managers',
            fields=[
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Users')),
            ],
            options={
                'db_table': 'Managers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MarketsAuthorized',
            fields=[
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Users')),
            ],
            options={
                'db_table': 'markets_authorized',
                'managed': False,
            },
        ),
    ]
